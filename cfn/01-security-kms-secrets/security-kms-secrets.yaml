# author: TGibson
# creation date: 2025-08-26
# CloudFormation YAML Template
# job title: security-kms-secrets
AWSTemplateFormatVersion: "2010-09-09"
    Description: Security/KMS/Secrets baseline.
    Parameters:
  Environment:
    Type: String
    AllowedValues: [dev, test, stage, prod]
    Default: dev
    Description: Deployment environment.
  ProjectName:
    Type: String
    Default: CorePlatform
    AllowedPattern: '^[a-zA-Z0-9\-]{1,32}$'
    Description: Project short code (letters/digits/hyphen).
  Owner:
    Type: String
    Default: tgibson@omgroup.example
    Description: Service owner (email or team).
  CostCenter:
    Type: String
    Default: CC-0000
    AllowedPattern: '^[A-Za-z0-9\-]{1,32}$'
    Description: Cost center or charge code.
  DataClassification:
    Type: String
    Default: Internal
    AllowedValues: [Public, Internal, Confidential, Restricted]
    Description: Data classification level.
Parameters:
      CreateExampleSecret:
        Type: String
        AllowedValues: ["true","false"]
        Default: "true"
        Description: Create a sample secret with placeholder value.

    Conditions:
      DoSecret: !Equals [!Ref CreateExampleSecret, "true"]

    Resources:
    SecurityBaseline:
  Type: AWS::Logs::LogGroup
  Properties:
    LogGroupName: !Sub "/${ProjectName}/${Environment}/SecurityBaseline"
    RetentionInDays: 30
    Tags:
      - Key: Project       ; Value: !Ref ProjectName
      - Key: Environment   ; Value: !Ref Environment
      - Key: Owner         ; Value: !Ref Owner
      - Key: CostCenter    ; Value: !Ref CostCenter
      - Key: DataClass     ; Value: !Ref DataClassification
      - Key: Author        ; Value: "TGibson"


      KmsKey:
        Type: AWS::KMS::Key
        Properties:
          Description: "CMK for application encryption"
          EnableKeyRotation: true
          KeyPolicy:
            Version: "2012-10-17"
            Statement:
              - Sid: Enable IAM User Permissions
                Effect: Allow
                Principal: { AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root" }
                Action: "kms:*"
                Resource: "*"
          Tags:
            - Key: Project       ; Value: !Ref ProjectName
            - Key: Environment   ; Value: !Ref Environment
            - Key: Owner         ; Value: !Ref Owner
            - Key: CostCenter    ; Value: !Ref CostCenter
            - Key: DataClass     ; Value: !Ref DataClassification
            - Key: Author        ; Value: "TGibson"


      KmsAlias:
        Type: AWS::KMS::Alias
        Properties:
          AliasName: !Sub "alias/${ProjectName}-${Environment}"
          TargetKeyId: !Ref KmsKey

      ExampleSecret:
        Condition: DoSecret
        Type: AWS::SecretsManager::Secret
        Properties:
          Name: !Sub "${ProjectName}/${Environment}/example"
          Description: "Example secret (replace in real use)"
          SecretString: '{"username":"admin","password":"ChangeMe123!"}'
          KmsKeyId: !Ref KmsKey
          Tags:
            - Key: Project       ; Value: !Ref ProjectName
            - Key: Environment   ; Value: !Ref Environment
            - Key: Owner         ; Value: !Ref Owner
            - Key: CostCenter    ; Value: !Ref CostCenter
            - Key: DataClass     ; Value: !Ref DataClassification
            - Key: Author        ; Value: "TGibson"


    Outputs:
      KmsKeyArn:
        Value: !GetAtt KmsKey.Arn
        Export: { Name: !Sub "${AWS::StackName}-KmsKeyArn" }
