# author: TGibson
# creation date: 2025-08-26
# CloudFormation YAML Template
# job title: dynamodb-elasticache
AWSTemplateFormatVersion: "2010-09-09"
    Description: DynamoDB and ElastiCache skeleton (off by default).
    Parameters:
  Environment:
    Type: String
    AllowedValues: [dev, test, stage, prod]
    Default: dev
    Description: Deployment environment.
  ProjectName:
    Type: String
    Default: CorePlatform
    AllowedPattern: '^[a-zA-Z0-9\-]{1,32}$'
    Description: Project short code (letters/digits/hyphen).
  Owner:
    Type: String
    Default: tgibson@omgroup.example
    Description: Service owner (email or team).
  CostCenter:
    Type: String
    Default: CC-0000
    AllowedPattern: '^[A-Za-z0-9\-]{1,32}$'
    Description: Cost center or charge code.
  DataClassification:
    Type: String
    Default: Internal
    AllowedValues: [Public, Internal, Confidential, Restricted]
    Description: Data classification level.
Parameters:
      CreateDynamo:
        Type: String
        AllowedValues: ["true","false"]
        Default: "false"
      CreateRedis:
        Type: String
        AllowedValues: ["true","false"]
        Default: "false"

    Conditions:
      DoDynamo: !Equals [!Ref CreateDynamo, "true"]
      DoRedis: !Equals [!Ref CreateRedis, "true"]

    Resources:
    DataNoSqlCache:
  Type: AWS::Logs::LogGroup
  Properties:
    LogGroupName: !Sub "/${ProjectName}/${Environment}/DataNoSqlCache"
    RetentionInDays: 30
    Tags:
      - Key: Project       ; Value: !Ref ProjectName
      - Key: Environment   ; Value: !Ref Environment
      - Key: Owner         ; Value: !Ref Owner
      - Key: CostCenter    ; Value: !Ref CostCenter
      - Key: DataClass     ; Value: !Ref DataClassification
      - Key: Author        ; Value: "TGibson"


      Table:
        Condition: DoDynamo
        Type: AWS::DynamoDB::Table
        Properties:
          BillingMode: PAY_PER_REQUEST
          KeySchema: [{ AttributeName: id, KeyType: HASH }]
          AttributeDefinitions: [{ AttributeName: id, AttributeType: S }]
          SSESpecification: { SSEEnabled: true }

      Redis:
        Condition: DoRedis
        Type: AWS::ElastiCache::ReplicationGroup
        Properties:
          Engine: redis
          CacheNodeType: cache.t3.micro
          NumNodeGroups: 1
          ReplicasPerNodeGroup: 0
          AutomaticFailoverEnabled: false
          AtRestEncryptionEnabled: true
          TransitEncryptionEnabled: true
